name: GitHub actions

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

env:
  LD_LIBRARY_PATH: /usr/local/lib
  WIN_LIBOQS_INSTALL_PATH: C:\liboqs

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest nose rednose
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m venv venv

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install liboqs POSIX
        if: matrix.os != 'windows-latest'
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs
          cmake -S liboqs -B liboqs/build -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
          sudo cmake --build liboqs/build --parallel 4 --target install      

      - name: Run examples POSIX
        if: matrix.os != 'windows-latest'
        run: |
            source venv/bin/activate && python setup.py install
            python examples/kem.py
            python examples/sig.py
            python examples/rand.py

      - name: Run unit tests POSIX
        if: matrix.os != 'windows-latest'
        run: |
          source venv/bin/activate
          python -m nose --rednose --verbose

      - name: Install liboqs Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs
          cmake -S liboqs -B liboqs\build -DCMAKE_INSTALL_PREFIX=${{env.WIN_LIBOQS_INSTALL_PATH}} -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
          cmake --build liboqs\build --parallel 4 --target install

      - name: Run examples Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          set "PATH=${{env.WIN_LIBOQS_INSTALL_PATH}}\bin;%PATH%"
          venv\Scripts\activate.bat
          python setup.py install
          

      - name: Run unit tests Windows
        shell: cmd
        if: matrix.os == 'windows-latest'
        run: |
          set "PATH=${{env.WIN_LIBOQS_INSTALL_PATH}}\bin;%PATH%"
